// Part of <https://miracle.systems/p/walkner-snf> licensed under <CC BY-NC-SA 4.0>

'use strict';

module.exports = (app, module) =>
{
  const {user, express, remoteApi, controller, SnfTest} = module;

  const canView = user.auth('LOCAL', 'USER');
  const canManage = user.auth('LOCAL', 'SNF:MANAGE');

  express.get('/snf/tests', canView, express.crud.browseRoute.bind(null, app, SnfTest));
  express.get('/snf/tests;getLineOrders', canView, remoteApi.createRedirect({
    prepareUrl: (url, req) =>
    {
      url.pathname = '/production/planExecution/' + encodeURIComponent(controller.values['prodLine']);
      url.search = 'queue=0';
    }
  }));
  express.get('/snf/tests;checkSapOrder', canView, remoteApi.createRedirect({
    prepareUrl: (url, req) =>
    {
      url.pathname = '/orders/' + req.query.orderNo;
      url.search = 'select(_id,qty)';
    }
  }));
  express.post('/snf/tests;printHidLabel', canManage, remoteApi.createRedirect());
  express.get('/snf/tests/:id', canView, express.crud.readRoute.bind(null, app, SnfTest));

  function printHidLabelRoute(req, res, next)
  {
    const apiReq = {
      method: 'POST',
      url: '/snf/tests;printHidLabel',
      json: true,
      body: req.body
    };

    remoteApi.request(apiReq, (err, apiRes) =>
    {
      if (!err && apiRes.statusCode !== 204)
      {
        return next(app.createError(`Unexpected response status: ${apiRes.statusCode}`, 'INVALID_STATUS', 500));
      }

      if (err)
      {
        return next(err);
      }

      res.sendStatus(204);
    });
  }
};
